{
  "name": "wechat",
  "version": "0.4.8",
  "description": "微信公共平台自动回复接口服务",
  "main": "index.js",
  "scripts": {
    "test": "make test-all",
    "blanket": {
      "pattern": "wechat/lib",
      "data-cover-flags": {
        "debug": false
      }
    },
    "travis-cov": {
      "threshold": 98
    }
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/node-webot/wechat.git"
  },
  "keywords": [
    "weixin",
    "wechat"
  ],
  "dependencies": {
    "xml2js": "0.2.6",
    "ejs": ">=0.8.3",
    "bufferhelper": ">=0.2.0"
  },
  "devDependencies": {
    "supertest": "*",
    "mocha": "*",
    "should": "*",
    "connect": "*",
    "blanket": "*",
    "travis-cov": "*",
    "coveralls": "*",
    "mocha-lcov-reporter": "*"
  },
  "author": {
    "name": "Jackson Tian"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "904aaec6f98ac78d80553ffc726ebea779f40e60",
  "directories": {
    "test": "test"
  },
  "readme": "wechat [![NPM version](https://badge.fury.io/js/wechat.png)](http://badge.fury.io/js/wechat) [![Build Status](https://travis-ci.org/node-webot/wechat.png?branch=master)](https://travis-ci.org/node-webot/wechat) [![Dependencies Status](https://david-dm.org/node-webot/wechat.png)](https://david-dm.org/node-webot/wechat) [![Coverage Status](https://coveralls.io/repos/node-webot/wechat/badge.png)](https://coveralls.io/r/node-webot/wechat)\n======\n\n微信公共平台消息接口服务中间件\n\n## Installation\n\n```\nnpm install wechat\n```\n\n## Use with Connect/Express\n\n```\nvar wechat = require('wechat');\n\napp.use(connect.query()); // Or app.use(express.query());\napp.use('/wechat', wechat('some token', function (req, res, next) {\n  // 微信输入信息都在req.weixin上\n  var message = req.weixin;\n  if (message.FromUserName === 'diaosi') {\n    // 回复屌丝(普通回复)\n    res.reply('hehe');\n  } else if (message.FromUserName === 'text') {\n    //你也可以这样回复text类型的信息\n    res.reply({\n      content: 'text object',\n      type: 'text'\n    });\n  } else if (message.FromUserName === 'hehe') {\n    // 回复一段音乐\n    res.reply({\n      title: \"来段音乐吧\",\n      description: \"一无所有\",\n      musicUrl: \"http://mp3.com/xx.mp3\",\n      hqMusicUrl: \"http://mp3.com/xx.mp3\"\n    });\n  } else {\n    // 回复高富帅(图文回复)\n    res.reply([\n      {\n        title: '你来我家接我吧',\n        description: '这是女神与高富帅之间的对话',\n        picurl: 'http://nodeapi.cloudfoundry.com/qrcode.jpg',\n        url: 'http://nodeapi.cloudfoundry.com/'\n      }\n    ]);\n  }\n}));\n```\n备注：token在[微信平台上申请](http://mp.weixin.qq.com/cgi-bin/callbackprofile?type=info&t=wxm-developer-ahead&lang=zh_CN)\n\n### WXSession支持\n由于公共平台应用的客户端实际上是微信，所以采用传统的Cookie来实现会话并不现实，为此中间件模块在openid的基础上添加了Session支持。一旦服务端启用了`connect.session`中间件，在业务中就可以访问`req.wxsession`属性。这个属性与`req.session`行为类似。\n\n```\napp.use(connect.cookieParser());\napp.use(connect.session({secret: 'keyboard cat', cookie: {maxAge: 60000}}));\napp.use('/wechat', wechat('some token', wechat.text(function (info, req, res, next) {\n  if (info.Content === '=') {\n    var exp = req.wxsession.text.join('');\n    req.wxsession.text = '';\n    res.reply(exp);\n  } else {\n    req.wxsession.text = req.wxsession.text || [];\n    req.wxsession.text.push(info.Content);\n    res.reply('收到' + info.Content);\n  }\n})));\n```\n\n`req.wxsession`与`req.session`采用相同的存储引擎，这意味着如果采用redis作为存储，这样`wxsession`可以实现跨进程共享。\n\n### 等待回复\n等待回复，类似于电话拨号业务。该功能在WXSession的基础上提供。需要为等待回复预置操作，中间件将其抽象为`List`对象，在提供服务前需要添加服务。\n\n```\nvar List = require('wechat').List;\nList.add('view', [\n  ['回复{a}查看我的性别', function (info, req, res) {\n    res.reply('我是个妹纸哟');\n  }],\n  ['回复{b}查看我的年龄', function (info, req, res) {\n    res.reply('我今年18岁');\n  }],\n  ['回复{c}查看我的性取向', '这样的事情怎么好意思告诉你啦- -']\n]);\n```\n\n然后在业务中触发等待回复事务，如下示例，当收到用户发送`list`后，调用`res.wait('view')`进入事务`view`中。\n\n```\nvar app = connect();\napp.use(connect.query());\napp.use(connect.cookieParser());\napp.use(connect.session({secret: 'keyboard cat', cookie: {maxAge: 60000}}));\napp.use('/wechat', wechat('some token', wechat.text(function (info, req, res, next) {\n  if (info.Content === 'list') {\n    res.wait('view');\n  } else {\n    res.reply('hehe');\n    // 或者中断等待回复事务\n    // res.nowait('hehe');\n  }\n})));\n```\n用户将收到如下回复：\n\n```\n回复a查看我的性别\n回复b查看我的年龄\n回复c查看我的性取向\n```\n\n用户回复其中的`a`、`b`、`c`将会由注册的方法接管回复。回复可以是一个函数，也可以是一个字符串：\n\n```\nList.add('view', [\n  ['回复{a}查看我的性别', function (info, req, res, next) {\n    res.reply('我是个妹纸哟');\n  }],\n  // 或者字符串\n  ['回复{c}查看我的性取向', '这样的事情怎么好意思告诉你啦- -']\n]);\n```\n\n如果用户触发等待回复事务后，没有按照`{}`中的进行回复，那么将会由原有的默认函数进行处理。在原有函数中，可以选择调用`res.nowait()`中断事务。`nowait()`除了能中断事务外，与`reply`的行为一致。\n\n## Show cases\n### Node.js API自动回复\n\n![Node.js API自动回复机器人](http://nodeapi.diveintonode.org/assets/qrcode.jpg)\n\n欢迎关注。\n\n代码：<https://github.com/JacksonTian/api-doc-service>\n\n你可以在[CloudFoundry](http://www.cloudfoundry.com/)、[appfog](https://www.appfog.com/)、[BAE](http://developer.baidu.com/wiki/index.php?title=docs/cplat/rt/node.js)等搭建自己的机器人。\n\n## 详细API\n原始API文档请参见：[消息接口指南](http://mp.weixin.qq.com/wiki/index.php?title=%E6%B6%88%E6%81%AF%E6%8E%A5%E5%8F%A3%E6%8C%87%E5%8D%97)。\n\n目前微信公共平台能接收到6种内容：文字、图片、位置、音频、事件、链接。其中音频还未正式开放。支持三种回复：纯文本、图文、音乐。\n针对目前的业务形态，发布了0.3.x版本，该版本支持六种内容分别处理，以保持业务逻辑的简洁性。\n\n```\napp.use('/wechat', wechat('some token', wechat.text(function (message, req, res, next) {\n  // message为文本内容\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125035',\n  // MsgType: 'text',\n  // Content: 'http',\n  // MsgId: '5837397576500011341' }\n}).image(function (message, req, res, next) {\n  // message为图片内容\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359124971',\n  // MsgType: 'image',\n  // PicUrl: 'http://mmsns.qpic.cn/mmsns/bfc815ygvIWcaaZlEXJV7NzhmA3Y2fc4eBOxLjpPI60Q1Q6ibYicwg/0',\n  // MsgId: '5837397301622104395' }\n}).location(function (message, req, res, next) {\n  // message为位置内容\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125311',\n  // MsgType: 'location',\n  // Location_X: '30.283950',\n  // Location_Y: '120.063139',\n  // Scale: '15',\n  // Label: {},\n  // MsgId: '5837398761910985062' }\n}).voice(function (message, req, res, next) {\n  // message为音频内容\n  // 微信官方还未正式开放音频内容，但是可以获取到部分信息，内容如下：\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125022',\n  // MsgType: 'voice',\n  // MediaId: 'OMYnpghh8fRfzHL8obuboDN9rmLig4s0xdpoNT6a5BoFZWufbE6srbCKc_bxduzS',\n  // Format: 'amr',\n  // MsgId: '5837397520665436492' }\n}).link(function (message, req, res, next) {\n  // message为链接内容\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125022',\n  // MsgType: 'link',\n  // Title: '公众平台官网链接',\n  // Description: '公众平台官网链接',\n  // Url: 'http://1024.com/',\n  // MsgId: '5837397520665436492' }\n}).event(function (message, req, res, next) {\n  // message为事件内容\n  // { ToUserName: 'gh_d3e07d51b513',\n  // FromUserName: 'oPKu7jgOibOA-De4u8J2RuNKpZRw',\n  // CreateTime: '1359125022',\n  // MsgType: 'event',\n  // Event: 'LOCATION',\n  // Latitude: '23.137466',\n  // Longitude: '113.352425',\n  // Precision: '119.385040',\n  // MsgId: '5837397520665436492' }\n})));\n```\n\n注意： `text`, `image`, `location`, `voice`, `link`, `event`方法请至少指定一个。\n这六个方法的设计适用于按内容类型区分处理的场景。如果需要更复杂的场景，请使用第一个例子中的API。\n\n### 更简化的API设计\n示例如下：\n\n```\napp.use('/wechat', wechat('some token').text(function (message, req, res, next) {\n  // TODO\n}).image(function (message, req, res, next) {\n  // TODO\n}).location(function (message, req, res, next) {\n  // TODO\n}).voice(function (message, req, res, next) {\n  // TODO\n}).link(function (message, req, res, next) {\n  // TODO\n}).event(function (message, req, res, next) {\n  // TODO\n}).middlewarify());\n```\n该接口从0.3.x提供。\n\n### 流程图\n![graph](https://raw.github.com/node-webot/wechat/master/figures/wechat.png)\n\n诸多细节由wechat中间件提供，用户只要关注蓝色部分的业务逻辑即可。\n## License\nThe MIT license.\n\n## 捐赠\n如果您觉得Wechat对您有帮助，欢迎请作者一杯咖啡\n\n[![捐赠wechat](https://img.alipay.com/sys/personalprod/style/mc/btn-index.png)](https://me.alipay.com/jacksontian)\n",
  "_id": "wechat@0.4.8",
  "_from": "wechat@~0.4.2"
}
