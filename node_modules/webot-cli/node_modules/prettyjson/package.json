{
  "author": {
    "name": "Rafael de Oleza",
    "email": "rafeca@gmail.com",
    "url": "https://github.com/rafeca"
  },
  "name": "prettyjson",
  "description": "Package for formatting JSON data in a coloured YAML-style, perfect for CLI output",
  "version": "0.8.1",
  "homepage": "http://rafeca.com/prettyjson",
  "keywords": [
    "json",
    "cli",
    "formatting",
    "colors"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/rafeca/prettyjson.git"
  },
  "main": "./lib/prettyjson",
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha --reporter spec"
  },
  "bin": {
    "prettyjson": "./bin/prettyjson"
  },
  "engines": {
    "node": ">= 0.6.0 < 0.11.0"
  },
  "dependencies": {
    "colors": "0.6.0-1"
  },
  "devDependencies": {
    "releasetools": "0.4.0",
    "step": "0.0.5",
    "mocha": "1.8.1",
    "should": "1.2.2",
    "jake": "0.5.9",
    "jshint": "1.1.0"
  },
  "contributors": [
    {
      "name": "- Rafael de Oleza",
      "email": "rafeca@gmail.com"
    },
    {
      "name": "- Dave Eddy",
      "email": "dave@daveeddy.com"
    },
    {
      "name": "- jiyinyiyong",
      "email": "jiyinyiyong@gmail.com"
    }
  ],
  "readme": "# prettyjson [![Build Status](https://secure.travis-ci.org/rafeca/prettyjson.png)](http://travis-ci.org/rafeca/prettyjson)\n\nPackage for formatting JSON data in a coloured YAML-style, perfect for CLI output\n\n## How to install\n\nJust install it via NPM:\n\n```bash\n$ npm install prettyjson\n```\n\n## Using it (from the CLI)\n\nThis package installs a command line interface to render JSON data in a more convenient way. You can use the CLI\nin three different ways:\n\n**Decode a JSON file:** If you want to see the contents of a JSON file, just pass it as the first argument to the CLI:\n\n```bash\n$ prettyjson package.json\n```\n\n![Example 1](http://rafeca.com/prettyjson/images/example3.png)\n\n**Decode the stdin:** You can also pipe the result of a command (for example an HTTP request) to the CLI to see\nthe JSON result in a clearer way:\n\n```bash\n$ curl https://api.github.com/users/rafeca | prettyjson\n```\n\n![Example 2](http://rafeca.com/prettyjson/images/example4.png)\n\n**Decode random strings:** if you call the CLI with no arguments, you'll get a prompt where you can past JSON strings\nand they'll be automatically displayed in a clearer way:\n\n![Example 3](http://rafeca.com/prettyjson/images/example5.png)\n\nIf you install the package globally (with `npm install -g prettyjson`), the CLI will be installed automatically in your PATH\nthanks to npm.\n\n### Customizing colors via command line\n\nNow it's possible to customize the colors of the output via environment variables, thanks to @bahamas10:\n\n```bash\n$ PRETTYJSON_KEYS=red PRETTYJSON_DASH=blue PRETTYJSON_STRING=yellow prettyjson package.json\n```\n\nThe available options are `PRETTYJSON_KEYS`, `PRETTYJSON_DASH`, `PRETTYJSON_STRING` and `PRETTYJSON_INDENT`.\n\n## Using it (from Node.js)\n\nIt's pretty easy to use it... you just have to include it in your script and call the `render()` method:\n\n```javascript\nvar prettyjson = require('prettyjson');\n\nvar data = {\n  username: 'rafeca',\n  url: 'https://github.com/rafeca',\n  twitter_account: 'https://twitter.com/rafeca',\n  projects: ['prettyprint', 'connfu']\n};\n\nconsole.log(prettyjson.render(data));\n```\n\nAnd will output:\n\n![Example 4](http://rafeca.com/prettyjson/images/example1.png)\n\nYou can also configure the colors of the hash keys and array dashes\n(using [colors.js](https://github.com/Marak/colors.js) colors syntax):\n\n```javascript\nvar prettyjson = require('prettyjson');\n\nvar data = {\n  username: 'rafeca',\n  url: 'https://github.com/rafeca',\n  twitter_account: 'https://twitter.com/rafeca',\n  projects: ['prettyprint', 'connfu']\n};\n\nconsole.log(prettyjson.render(data, {\n  keysColor: 'rainbow',\n  dashColor: 'magenta',\n  stringColor: 'white'\n}));\n```\n\nWill output something like:\n\n![Example 5](http://rafeca.com/prettyjson/images/example2.png)\n\n## Annotated source\n\nYou can check the [annotated source](http://rafeca.com/prettyjson/prettyjson.html) for more information about how it works\n\n## Running Tests\n\nTo run the test suite first invoke the following command within the repo, installing the development dependencies:\n\n```bash\n$ npm install --dev\n```\n\nthen run the tests:\n\n```bash\n$ npm test\n```\n\nYou can check the package's [test coverage](http://rafeca.com/prettyjson/coverage.html) if you are one of those test paranoics",
  "_id": "prettyjson@0.8.1",
  "dist": {
    "shasum": "4f9b494fabb86598845bf43a90314d3199620f3e"
  },
  "_from": "prettyjson@~0.8.1"
}
